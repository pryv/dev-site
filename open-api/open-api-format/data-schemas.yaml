components:
  schemas:
    Stream:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
          uniqueItems: true
          readOnly: true
          required: true
          description:  "The identifier for the stream. Automatically generated if not set when creating the stream; **slugified if necessary**."
        name: 
          type: string
          uniqueItems: true
          required: true
          description: "A name identifying the stream for users. The name must be unique among the stream's siblings in the streams tree structure."
        parentId:
          $ref: '#/components/schemas/Identifier'
          description: "The identifier of the stream's parent, if any. A value of `null` indicates that the stream has no parent (i.e. root stream)."
        singleActivity:
          type: boolean
          description: "**(DEPRECATED**)  
          If specified and `true`, the system will ensure that period events in this stream and its children never overlap."
        clientData:
          $ref: '#/components/schemas/Keyvalue'
          description: "Additional client data for the stream."
        children:
          type: array
          items:
            $ref: '#/components/schemas/Stream'
          readOnly: true
          required: true
          description: "The stream's sub-streams, if any. This field cannot be set in requests creating a new streams: streams are created individually by design."
        trashed:
          type: boolean
          description: "`true` if the stream is in the trash."
    Identifier:
      type: string
      properties:
        description: "A string uniquely identifying an item for a given user. For some types of items (e.g. \"structural\" ones such as streams), the identifier can be optionally set by API clients; otherwise it is generated by the server. **Event ids are always [collision-resistant cuids](https://usecuid.org/).**"
    Timestamp:
      type: integer
      properties:
        description: "A positive floating-point number representing a number of seconds since any reference date and time, **independently from the time zone**. Because date and time synchronization between server time and client time is done by the client simply comparing the current server timestamp with its own, the reference date and time does not actually matter (but we do use standard Unix epoch time)."
      examples: 
        externalValue: 'http://api.pryv.com/reference/#timestamp'
    Keyvalue:
      type: object
      properties:
          description: "An object (key-value map) for client apps to store additional data about the containing item (stream, event, etc.), such as a color, a reference to an associated icon, or other app-specific metadata.\n\n### Adding, updating and removing client data\n\nWhen the containing item is updated, additional data fields can be added, updated and removed as follows:\n\n- To add or update a field, just set its value; for example: `{\"clientData\": {\"keyToAddOrUpdate\": \"value\"}}`\n- To delete a field, set its value to `null`; for example: `{\"clientData\": {\"keyToDelete\": null}}`\n\nFields you don't specify in the update are left untouched.\n\n### Naming convention\n\nThe convention is that each app names the keys it uses with an `{app-id}:` prefix. For example, an app with id \"riki\" would store its data in fields such as `\"riki:key\": \"some value\"`."
      additionalProperties: true 
    ItemDeletion:
      type: object
      description: "A record of a deleted item for sync purposes."
      properties:
        id: 
          description: "The identifier of the deleted item."
          required: true
          $ref: '#/components/schemas/Identifier'
        timestamp:
          description: "The time the item was deleted."
          $ref: '#/components/schemas/Timestamp'
          


