---
name: 'value-types'
---

doctype 5
html.no-js(lang='en')
  head
    meta(charset='UTF-8')
    title Pryv API value types directory
    meta(name='description', content='TODO')
    meta(name='viewport', content='width=device-width, initial-scale=1')
    link(rel='stylesheet', type='text/css', href='bootstrap.min.css')
    link(rel='stylesheet', type='text/css', href='github.css')
    link(rel='stylesheet', type='text/css', href='highlight.css')
    link(rel='stylesheet', type='text/css', href='style.css')
    script(src='scripts/modernizr.min.js')
    script(src='http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.js')
    script(src='scripts/jquery.toc.min.js')

  body
    #main
      header#pageHeader
        //- TODO
      h2 Go back to:
      ul
        li: a(href='index.html') Index page
        li: a(href='reference.html') API reference
        li: a(href='standard-structure.html') Standard data structure: default and recommended channels and folders
      h2 Value Types Directory
      - var valueTypeFiles = getCollection('valueTypes').toJSON()
      -//mixin recursive(data)
        -//ul.nav.nav-list
          - //for (var compName in data)
            - //var subData = data[compName]
            - //if(typeof subData === 'object')
              -//li.nav-header
                -//|!{compName} 
                -//|:
                -//mixin recursive(subData)
            - //else
              -//li
                -//|!{compName}
                -//|:
                -//|!{subData} 

      #value_types
        - each valueTypeFile in valueTypeFiles
          - var content = JSON.parse(valueTypeFile.body)
          - var version = content.version.version
          - var types = content['data-types']
          - for(var typeName in types)
            - var typeObject = types[typeName]
            h3= typeName
            div= typeObject.description
            - var headers = []
            if (typeObject.default)
              - for(var defaultValue in typeObject.default)
                - headers.push(defaultValue)
            - for (var subName in typeObject.sub)
              - var subObject = typeObject.sub[subName]
                - for(var subTypeName in subObject)
                  - headers.push(subTypeName)
            - headers = headers.filter(function(el,i,a){if(i==a.indexOf(el))return 1;return 0})
            table.table
              thead
                tr
                  -// name column.
                  th(width='12%') name
                  - each header in headers
                    -// other custom columns.
                    th= header
              tbody
                - for (var subName in typeObject.sub)
                  - var subObject = typeObject.sub[subName]
                  - var toDecompose = []
                  tr
                    -// name column.
                    td
                      |!{typeName}
                      |:
                      |!{subName}
                    - each header in headers
                      -// other custom columns.
                      - var subTypeContent = subObject[header]
                      - if(!subTypeContent)
                        - subTypeContent = typeObject.default[header]
                      - if(typeof subTypeContent === 'object')
                        - toDecompose.push(header)
                        td see row below
                      - else
                        td= subTypeContent
                    - if (toDecompose.length)
                      - each decomp in toDecompose
                        - var toDecompText = decomp 
                        - toDecompText += ': ' + JSON.stringify(subObject[decomp])
                        tr 
                          td
                            |!{typeName}
                            |:
                            |!{subName}
                          td(colspan=headers.length)
                            |!{toDecompText}


    #toc
      //- content generated by TOC plugin (see below)

    script
      jQuery(document).ready(function($) {
        $('#toc').toc({
          'selectors': 'h1,h2,h3',
          'container': '#value_types',
          'smoothScrolling': false,
          'prefix': 'toc',
          'onHighlight': function(el) {},
          'highlightOnScroll': true,
          'highlightOffset': 100,
          'anchorName': function(i, heading, prefix) {
            return prefix+i;
          },
          'headerText': function(i, heading, $heading) {
            return $heading.text();
          }
        });
      });
