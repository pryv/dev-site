---
name: 'value-types'
---

doctype 5
html.no-js(lang='en')
  head
    meta(charset='UTF-8')
    title Pryv API value types directory
    meta(name='description', content='TODO')
    meta(name='viewport', content='width=device-width, initial-scale=1')
    link(rel='stylesheet', type='text/css', href='bootstrap.min.css')
    link(rel='stylesheet', type='text/css', href='github.css')
    link(rel='stylesheet', type='text/css', href='highlight.css')
    link(rel='stylesheet', type='text/css', href='style.css')
    script(src='scripts/modernizr.min.js')
    script(src='http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.js')
    script(src='scripts/jquery.toc.min.js')
    script(src='http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.2.1/bootstrap.min.js")

  body
    #main
      header#pageHeader
        //- TODO

      - var valueTypeFiles = getCollection('valueTypes').toJSON()
      - var specialCases = []
      mixin recursive(data)
        ul.nav.nav-list
          - for (var compName in data)
            - var subData = data[compName]
            - if(typeof subData === 'object')
              li.nav-header
                | !{compName} 
                |:
                mixin recursive(subData)
            - else
              li
                | !{compName}  
                |:
                | !{subData}  

      #value_types
        - each valueTypeFile in valueTypeFiles
          - var content = JSON.parse(valueTypeFile.body)
          - var version = content.version.version
          - var types = content['data-types']
          - for(var typeName in types)
            - var typeObject = types[typeName]
            h3= typeName
            - for (var subName in typeObject.sub)
              - var subObject = typeObject.sub[subName]
              - var toDecompose = {name: subName, decompose:[]}
              table.table
                thead
                  tr
                    th name
                    - for(var subTypeName in subObject)
                        th= subTypeName
                tbody
                  tr
                    td= subName
                    - for(var subTypeName in subObject)
                      - var subTypeContent = subObject[subTypeName]
                      - if(typeof subTypeContent === 'object')
                        - toDecompose.decompose.push(subTypeName)
                        td object (see description below)
                      - else
                        td= subTypeContent
              - specialCases.push(toDecompose) 
            - each sp in specialCases
              - if (sp.decompose.length)
                h4= sp.name
                - each obj in sp.decompose
                  h5= obj
                    | :
                  - var moreToDecompose = typeObject.sub[sp.name][obj]
                  mixin recursive(moreToDecompose)
            - specialCases = []


    #toc
      //- content generated by TOC plugin (see below)

    script
      jQuery(document).ready(function($) {
        $('#toc').toc({
          'selectors': 'h1,h2,h3',
          'container': '#value_types',
          'smoothScrolling': false,
          'prefix': 'toc',
          'onHighlight': function(el) {},
          'highlightOnScroll': true,
          'highlightOffset': 100,
          'anchorName': function(i, heading, prefix) {
            return prefix+i;
          },
          'headerText': function(i, heading, $heading) {
            return $heading.text();
          }
        });
      });
