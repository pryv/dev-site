---
name: 'value-types'
---

doctype 5
html.no-js(lang='en')
  head
    meta(charset='UTF-8')
    title Pryv API value types directory
    meta(name='description', content='TODO')
    meta(name='viewport', content='width=device-width, initial-scale=1')
    link(rel='stylesheet', type='text/css', href='bootstrap.min.css')
    link(rel='stylesheet', type='text/css', href='github.css')
    link(rel='stylesheet', type='text/css', href='highlight.css')
    link(rel='stylesheet', type='text/css', href='style.css')
    script(src='scripts/modernizr.min.js')
    script(src='http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.js')
    script(src='scripts/jquery.toc.min.js')

    script
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-36589447-2']);
      _gaq.push(['_trackPageview']);

      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();

  body
    #main
      header#pageHeader
        a(href='index.html') Home

      #value_types

        h1 Value Types Directory

        h2 Useful links
        ul
          li: a(href='http://tools.ietf.org/html/draft-zyp-json-schema-03#page-8') Inspiration for describing types 
          li: a(href='https://developers.facebook.com/docs/reference/api/post/') Facebook documentation on posts
        - var valueTypeFiles = getCollection('valueTypeSections').toJSON()

        h2 Value Types
        - each valueTypeFile in valueTypeFiles
          - var content = JSON.parse(valueTypeFile.body)
          - var version = content.version.version
          - var types = content['data-types']
          - for(var typeName in types)
            - var typeObject = types[typeName]
            h3= typeName
            div= typeObject.description
            - var headers = []
            if (typeObject.default)
              - for(var defaultValue in typeObject.default)
                - headers.push(defaultValue)
            - for (var subName in typeObject.sub)
              - var subObject = typeObject.sub[subName]
                - for(var subTypeName in subObject)
                  - headers.push(subTypeName)
            - headers = headers.filter(function(el,i,a){if(i==a.indexOf(el))return 1;return 0})
            table.table
              thead
                tr
                  -// name column.
                  th(width='12%') name
                  - each header in headers
                    - if (header !== 'properties')
                      -// other custom columns.
                      th= header
              tbody
                - for (var subName in typeObject.sub)
                  - var subObject = typeObject.sub[subName]
                  tr
                    -// name column.
                    td(rowspan=2, style='vertical-align:middle;')!{typeName}:!{subName}
                    - each header in headers
                      -// other custom columns.
                      - var subTypeContent = subObject[header]
                      - if(!subTypeContent)
                        - subTypeContent = typeObject.default[header]
                      - if(header !== 'properties')
                        td= subTypeContent
                    - //Â Handle properties in a separate row.
                    tr 
                      td(colspan=headers.length)
                        - if (!subObject['properties'])
                          b properties:
                          |  -
                        - else
                          - var propText = JSON.stringify(subObject['properties'], null, 4)
                          b properties:
                          br
                          pre= propText


    #toc
      //- content generated by TOC plugin (see below)

    script
      jQuery(document).ready(function($) {
        $('#toc').toc({
          'selectors': 'h2,h3',
          'container': '#value_types',
          'smoothScrolling': false,
          'prefix': 'toc',
          'onHighlight': function(el) {},
          'highlightOnScroll': true,
          'highlightOffset': 100,
          'anchorName': function(i, heading, prefix) {
            return prefix+i;
          },
          'headerText': function(i, heading, $heading) {
            return $heading.text();
          }
        });
      });
