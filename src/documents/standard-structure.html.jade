---
name: 'standard-structure'
title: 'Standard data structure'
layout: 'two-columns'
withExamples: false
withTOC: true
---
section#about
  strong THIS SECTION IS OBSOLETE AS OF API v0.5; TODO: update
  h1 Standard data structure
  :markdown
    This page lists the standard channels and folders we recommend to use in Pryv, for the
    sake of integration into Pryv apps and general interoperability.
    Where appropriate, you'll also find examples to illustrate their use.

    **Warnings:**

    - The event structure used in examples is obsolete. Please refer to the [API
    reference](reference.html#data-structure-event) for up-to-date info in the meantime.
    - The channels and folders descriptions must be reviewed for relevance and consistency.

    ## Standard items and examples

    **Standard** items are standard channels and folders whose `id` is reserved and
    specifically handled by Pryv apps. You should always use them if applicable (if not see
    below about submitting new items to the list).

    **Examples** illustrate what kind of items you may find in the standard channels and
    folders, to better understand their purpose. (The `id` of those examples is irrelevant
    here and isn't mentioned.)

    ## Submitting new items to the list

    We can't pretend to cover every useful case; if you can't find a suitable item here and
    your app handles data that's potentially reusable elsewhere, please
    <a href="mailto:developers@pryv.com">send us an e-mail</a> explaining your needs.

    ## JSON file

    This list is also available as a [JSON file](standard-structure/channels-folders.json).

section#structure
  h1 THIS SECTION IS OBSOLETE AS OF API v0.5; TODO: update
  h1 Standard channels and folders
  p Standard items are identified by their <code>id</code>.

  mixin renderFolders(folders)
    if (folders && folders.length)
      ul
        - each folder in folders
          li
            - if (folder.id)
              | <code>!{folder.id}</code>: <strong>standard</strong>;
              | default name (EN): "!{folder.name}"
            - else
              | "!{folder.name}": <strong>example</strong>
            br
            | #{folder.description}
            mixin renderFolders(folder.folders)

  mixin renderEventExamples(events)
    - if (events && events.length)
      each event in events
        pre= JSON.stringify(event, null, 2)
    - else
      | No examples... yet.

  - var content = require('files/standard-structure/channels-folders.json')
  - var version = content.version.version
  - var channels = content['channels']
  - each channel in channels
    .channel
      h2
        - if (channel.id)
          | <code>!{channel.id}</code> channel
        - else
          | "!{channel.name}" channel
      p.info
        - if (channel.id)
          | <strong>Standard</strong> channel. Default name (EN): "!{channel.name}".
        - else
          | <strong>Example</strong> channel.
          - channel.id = ''
      p.description= channel.description

      - if (channel.folders.length)
        h3 Folders
        mixin renderFolders(channel.folders)

    - //Â Make event examples visibility optional.
    h3: a(onclick='javascript:$("#events-'+channel.id+'").toggle()') Event examples
    div(id='events-#{channel.id}', style='display:none;')
      mixin renderEventExamples(channel.eventExamples)
