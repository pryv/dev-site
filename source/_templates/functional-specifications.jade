extends layout

mixin h1(string)
  if string
    | !{markdown('# ' + string)}

mixin h2(string)
  if string
    | !{markdown('## ' + string)}

mixin h3(string)
  if string
    | !{markdown('### ' + string)}

mixin h4(string)
  if string
    | !{markdown('#### ' + string)}

mixin h5(string)
  if string
    | !{markdown('##### ' + string)}

mixin intro(string)
  if string
    .intro
      | !{markdown(string)}

mixin text(string)
  if string
    | !{markdown(string)}

mixin requirementId(id)
  if id
    span.method-id
      span.label id
      span.label-value: code !{id}


mixin typeText(string)
  if string
    - var output = markdown(string)
    -// YES, HACK
    span.type !{output.indexOf('<p>') === 0 ? output.substr(3, output.length - 8) : output}

mixin labelValue(label, cssClass, value)
  if value
    span(class='label label-default ' + cssClass)
      | !{label + (typeof(value) === 'string' ? ' ' + value : '')}

mixin requirements(requirements, reqid)
  if requirements
    each requirement in requirements
      +requirementId(reqid + requirement.reqid)
      table.definitions
        tr
          th
            code !{"Title"}
          td
            .header
              -// TODO make type specification flexible
              +typeText(requirement.title)
        tr
          th
            code !{"Desc"}
          td
            .description !{markdown(requirement.description || '')}

mixin section(section, parentDocId, level, nreqid, nsectionHeader, sectionNum)
  - var reqid = 'REQ_'
  if nreqid 
    - reqid = '' + nreqid
  if section.reqid 
    - reqid = reqid + section.reqid + '_' 
  - var sectionHeader = ''
  if nsectionHeader
    - sectionHeader = nsectionHeader
  - var sectionTitle = sectionHeader + ' ' + section.title
  - var docId = functionalSpecifications.helpers.getDocId(parentDocId, section.id)
  - var sectionClass = (section.type || '')
  section(id='#{docId}', class='#{sectionClass}')
    if level === 1
      +h1(sectionTitle)
    else if level === 2
      +h2(sectionTitle)
    else if level === 3
      +h3(sectionTitle)
    else
      +h4(sectionTitle)
    .content
      .meta
      +intro(section.description)
      +requirements(section.requirements, reqid)
    if section.sections
      - var subSectionNum = 0
      each subSection in section.sections
        - subSectionNum++
        +section(subSection, docId, level + 1, reqid, sectionHeader + subSectionNum + '.')

block content
  - var source = sourceOverride ? functionalSpecifications[sourceOverride] : functionalSpecifications
  - var sectionNum = 0
  - var sectionHeader = ''
  each level1Section in source.sections
    - sectionNum++
    - sectionHeader = sectionNum + '.'
    +section(level1Section, level1Section.id, 1, '', sectionHeader)



